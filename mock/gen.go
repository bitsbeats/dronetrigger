// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bitsbeats/dronetrigger/core (interfaces: Drone)

// Package mock is a generated GoMock package.
package mock

import (
	core "github.com/bitsbeats/dronetrigger/core"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockDrone is a mock of Drone interface
type MockDrone struct {
	ctrl     *gomock.Controller
	recorder *MockDroneMockRecorder
}

// MockDroneMockRecorder is the mock recorder for MockDrone
type MockDroneMockRecorder struct {
	mock *MockDrone
}

// NewMockDrone creates a new mock instance
func NewMockDrone(ctrl *gomock.Controller) *MockDrone {
	mock := &MockDrone{ctrl: ctrl}
	mock.recorder = &MockDroneMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockDrone) EXPECT() *MockDroneMockRecorder {
	return m.recorder
}

// RebuildLastBuild mocks base method
func (m *MockDrone) RebuildLastBuild(arg0, arg1 string) (*core.Build, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "RebuildLastBuild", arg0, arg1)
	ret0, _ := ret[0].(*core.Build)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// RebuildLastBuild indicates an expected call of RebuildLastBuild
func (mr *MockDroneMockRecorder) RebuildLastBuild(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RebuildLastBuild", reflect.TypeOf((*MockDrone)(nil).RebuildLastBuild), arg0, arg1)
}
